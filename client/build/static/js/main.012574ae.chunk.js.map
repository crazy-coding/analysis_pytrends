{"version":3,"sources":["assets/img/react-logo.png","assets/img/mike.jpg","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","views/Dashboard.js","layouts/Admin/Admin.js","routes.js","index.js"],"names":["module","exports","AdminNavbar","React","Component","constructor","props","super","updateColor","window","innerWidth","this","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","Navbar","className","classNames","location","pathname","indexOf","expand","Container","fluid","Button","id","onClick","handleMiniClick","UncontrolledTooltip","delay","target","placement","toggled","sidebarOpened","type","toggleSidebar","NavbarBrand","href","e","preventDefault","brandText","data-toggle","data-target","aria-expanded","aria-label","Collapse","navbar","isOpen","Nav","InputGroup","tag","UncontrolledDropdown","nav","DropdownToggle","caret","DropdownMenu","right","NavLink","DropdownItem","alt","src","require","divider","Modal","modalClassName","toggle","Input","placeholder","data-dismiss","Footer","default","Date","getFullYear","ps","Sidebar","getCollapseStates","routes","initialState","map","prop","key","collapse","getCollapseInitialState","views","createLinks","rtlActive","redirect","st","undefined","icon","rtlName","name","rtlMini","mini","activeRoute","layout","path","to","activeClassName","closeSidebar","routeName","i","length","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","activeColor","logo","logoImg","logoText","outterLink","imgSrc","text","innerLink","data","ref","chartOption","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","zeroLineColor","ticks","padding","fontColor","xAxes","Dashboard","getCategory","a","site","value","trendType","axios","get","then","res","siteOptions","trendTypeOptions","trendNameOptions","trendName","setCategory","renderChart","pullType","fromDate","toDate","chart","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","values","chartOptions","Row","Col","xs","Card","CardHeader","sm","CardTitle","lg","md","FormGroup","classNamePrefix","onChange","options","Label","inputProps","dateFormat","timeFormat","format","CardBody","component","Admin","showNavbarButton","document","documentElement","scrollTop","scrollingElement","mainPanel","opacity","getRoutes","getActiveRoute","collapseActiveRoute","handleActiveClick","notifyMessage","body","classList","contains","sidebarMini","place","message","autoDismiss","notificationAlert","remove","add","tables","querySelectorAll","componentDidUpdate","history","style","from","hist","createBrowserHistory","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.012574ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.9361df0c.png\";","module.exports = __webpack_public_path__ + \"static/media/mike.8d9bbf30.jpg\";","\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", {\n            [this.state.color]:\n              this.props.location.pathname.indexOf(\"full-screen-map\") === -1\n          })}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div className=\"navbar-minimize d-inline\">\n                <Button\n                  className=\"minimize-sidebar btn-just-icon\"\n                  color=\"link\"\n                  id=\"tooltip209599\"\n                  onClick={this.props.handleMiniClick}\n                >\n                  <i className=\"tim-icons icon-align-center visible-on-sidebar-regular\" />\n                  <i className=\"tim-icons icon-bullet-list-67 visible-on-sidebar-mini\" />\n                </Button>\n                <UncontrolledTooltip\n                  delay={0}\n                  target=\"tooltip209599\"\n                  placement=\"right\"\n                >\n                  Sidebar toggle\n                </UncontrolledTooltip>\n              </div>\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navigation\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <InputGroup className=\"search-bar\" tag=\"li\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                  >\n                    <div className=\"notification d-none d-lg-block d-xl-block\" />\n                    <i className=\"tim-icons icon-sound-wave\" />\n                    <p className=\"d-lg-none\">Notifications</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Mike John responded to your email\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        You have 5 more tasks\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Your friend Michael is in town\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Another notification\n                      </DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Another one\n                      </DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={e => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/mike.jpg\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","\n/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <ul className=\"nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"https://www.creative-tim.com\">\n                Creative Tim\n              </a>\n            </li>{\" \"}\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                href=\"https://www.creative-tim.com/presentation\"\n              >\n                About us\n              </a>\n            </li>{\" \"}\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"https://blog.creative-tim.com\">\n                Blog\n              </a>\n            </li>\n          </ul>\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with{\" \"}\n            <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n            <a href=\"https://www.creative-tim.com/\" target=\"_blank\">\n              Creative Tim\n            </a>{\" \"}\n            for a better web.\n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, Collapse } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getCollapseStates(props.routes);\n  }\n  // this creates the intial state of this component based on the collapse routes\n  // that it gets through this.props.routes\n  getCollapseStates = routes => {\n    let initialState = {};\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        initialState = {\n          [prop.state]: this.getCollapseInitialState(prop.views),\n          ...this.getCollapseStates(prop.views),\n          ...initialState\n        };\n      }\n      return null;\n    });\n    return initialState;\n  };\n  // this verifies if any of the collapses should be default opened on a rerender of this component\n  // for example, on the refresh of the page,\n  // while on the src/views/forms/RegularForms.js - route /admin/regular-forms\n  getCollapseInitialState(routes) {\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\n        return true;\n      } else if (window.location.href.indexOf(routes[i].path) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  createLinks = routes => {\n    const { rtlActive } = this.props;\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.collapse) {\n        var st = {};\n        st[prop[\"state\"]] = !this.state[prop.state];\n        return (\n          <li\n            className={this.getCollapseInitialState(prop.views) ? \"active\" : \"\"}\n            key={key}\n          >\n            <a\n              href=\"#pablo\"\n              data-toggle=\"collapse\"\n              aria-expanded={this.state[prop.state]}\n              onClick={e => {\n                e.preventDefault();\n                this.setState(st);\n              }}\n            >\n              {prop.icon !== undefined ? (\n                <>\n                  <i className={prop.icon} />\n                  <p>\n                    {rtlActive ? prop.rtlName : prop.name}\n                    <b className=\"caret\" />\n                  </p>\n                </>\n              ) : (\n                <>\n                  <span className=\"sidebar-mini-icon\">\n                    {rtlActive ? prop.rtlMini : prop.mini}\n                  </span>\n                  <span className=\"sidebar-normal\">\n                    {rtlActive ? prop.rtlName : prop.name}\n                    <b className=\"caret\" />\n                  </span>\n                </>\n              )}\n            </a>\n            <Collapse isOpen={this.state[prop.state]}>\n              <ul className=\"nav\">{this.createLinks(prop.views)}</ul>\n            </Collapse>\n          </li>\n        );\n      }\n      return (\n        <li className={this.activeRoute(prop.layout + prop.path)} key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            activeClassName=\"\"\n            onClick={this.props.closeSidebar}\n          >\n            {prop.icon !== undefined ? (\n              <>\n                <i className={prop.icon} />\n                <p>{rtlActive ? prop.rtlName : prop.name}</p>\n              </>\n            ) : (\n              <>\n                <span className=\"sidebar-mini-icon\">\n                  {rtlActive ? prop.rtlMini : prop.mini}\n                </span>\n                <span className=\"sidebar-normal\">\n                  {rtlActive ? prop.rtlName : prop.name}\n                </span>\n              </>\n            )}\n          </NavLink>\n        </li>\n      );\n    });\n  };\n  // verifies if routeName is the one active (in browser input)\n  activeRoute = routeName => {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  componentDidMount() {\n    // if you are using a Windows Machine, the scrollbars will have a Mac look\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    // we need to destroy the false scrollbar when we navigate\n    // to a page that doesn't have this component rendered\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    const { activeColor, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.closeSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.closeSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <NavLink\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.closeSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </NavLink>\n        );\n        logoText = (\n          <NavLink\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.closeSidebar}\n          >\n            {logo.text}\n          </NavLink>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={activeColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>{this.createLinks(this.props.routes)}</Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  activeColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\", \"orange\", \"red\"]),\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.array.isRequired,\n  logo: PropTypes.oneOfType([\n    PropTypes.shape({\n      innerLink: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    }),\n    PropTypes.shape({\n      outterLink: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    })\n  ]),\n  // this is used on responsive to close the sidebar on route navigation\n  closeSidebar: PropTypes.func\n};\n\nexport default Sidebar;\n","\nimport React from \"react\";\n// react plugin used to create charts\nimport { Line } from \"react-chartjs-2\";\n// react plugin used to create DropdownMenu for selecting items\nimport Select from \"react-select\";\n// react plugin used to create datetimepicker\nimport ReactDatetime from \"react-datetime\";\n// axios for api\nimport axios from 'axios';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Label,\n  FormGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst SERVER_URI = 'http://127.0.0.1:8000';\n\nvar chartOption = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          // suggestedMin: 0,\n          // suggestedMax: 100,\n          padding: 20,\n          fontColor: \"#9a9a9a\"\n        }\n      }\n    ],\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\"\n        }\n      }\n    ]\n  }\n};\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chart: {},\n      chartOptions: chartOption,\n      site: null,\n      siteOptions: [],\n      trendType: null,\n      trendTypeOptions: [],\n      trendName: null,\n      trendNameOptions: [],\n      pullType: { value: \"week\", label: \"Weekly\" },\n      fromDate: '2018-01-01',\n      toDate: '2020-10-01',\n    };\n  }\n  componentDidMount() {\n    this.setCategory(\"site\");\n  };\n  getCategory = async mode => {\n    let site = this.state.site ? this.state.site.value : '';\n    let trendType = this.state.trendType ? this.state.trendType.value : '';\n\n    await axios.get(`${SERVER_URI}/api/v1/category/?m=${mode}&site=${site}&trend_type=${trendType}`)\n    .then(res => {\n      const data = res.data;\n      switch (mode) {\n        case \"site\":\n          this.setState({ siteOptions: data, site: data[0] });\n          break;\n        case \"type\":\n          this.setState({ trendTypeOptions: data, trendType: data[0] });\n          break;\n        case \"name\":\n          this.setState({ trendNameOptions: data, trendName: data[0] });\n          break;\n        default:\n      }\n    })\n  };\n  setCategory = async mode => {\n    await this.getCategory(mode);\n    switch (mode) {\n      case \"site\":\n        await this.getCategory(\"type\");\n        await this.getCategory(\"name\");\n        break;\n      case \"type\":\n        await this.getCategory(\"name\");\n        break;\n      case \"name\":\n        break;\n      default:\n    }\n    await this.renderChart();\n  };\n  renderChart = async () => {\n    let site = this.state.site ? this.state.site.value : '';\n    let trendType = this.state.trendType ? this.state.trendType.value : '';\n    let trendName = this.state.trendName ? this.state.trendName.value : '';\n    let pullType = this.state.pullType ? this.state.pullType.value : '';\n\n    await axios.get(`${SERVER_URI}/api/v1/chart/?from_date=${this.state.fromDate}&to_date=${this.state.toDate}&site=${site}&trend_type=${trendType}&trend_name=${trendName}&pull_type=${pullType}`)\n    .then(res => {\n      const data = canvas => {\n        let ctx = canvas.getContext(\"2d\");\n    \n        let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    \n        gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n        gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n        gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n        return {\n          labels: res.data.labels,\n          datasets: [\n            {\n              label: \"Google Trend\",\n              fill: true,\n              backgroundColor: gradientStroke,\n              borderColor: \"#1f8ef1\",\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: \"#1f8ef1\",\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: \"#1f8ef1\",\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: res.data.values\n            }\n          ]\n        };\n      }\n      this.setState({ chart: data });\n    })\n  }\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"3\">\n                      <h5 className=\"card-category\">Google Trends</h5>\n                      <CardTitle tag=\"h2\">Charts</CardTitle>\n                    </Col>\n                    <Col sm=\"9\">\n                      <Row>\n                        <Col lg=\"3\" md=\"4\" sm=\"6\">\n                          <FormGroup className=\"has-label\">\n                            <label>Trend Site</label>\n                            <Select\n                              className=\"react-select\"\n                              classNamePrefix=\"react-select\"\n                              name=\"site\"\n                              value={this.state.site}\n                              onChange={value => {\n                                this.setState({ site: value }, function() { this.setCategory(\"type\") });\n                              } }\n                              options={this.state.siteOptions}\n                              placeholder=\"Single Select\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"3\" md=\"4\" sm=\"6\">\n                          <FormGroup className=\"has-label\">\n                            <label>Trend Type</label>\n                            <Select\n                              className=\"react-select\"\n                              classNamePrefix=\"react-select\"\n                              name=\"trend_type\"\n                              value={this.state.trendType}\n                              onChange={value =>{\n                                this.setState({ trendType: value }, function() { this.setCategory(\"name\") });\n                              } }\n                              options={this.state.trendTypeOptions}\n                              placeholder=\"Single Select\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"3\" md=\"4\" sm=\"6\">\n                          <FormGroup className=\"has-label\">\n                            <label>Trend Name</label>\n                            <Select\n                              className=\"react-select\"\n                              classNamePrefix=\"react-select\"\n                              name=\"trend_name\"\n                              value={this.state.trendName}\n                              onChange={value => \n                                this.setState({ trendName: value }, function() { this.renderChart() })\n                              }\n                              options={this.state.trendNameOptions}\n                              placeholder=\"Single Select\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"3\" md=\"4\" sm=\"6\">\n                          <FormGroup className=\"has-label\">\n                            <label>Pull Type</label>\n                            <Select\n                              className=\"react-select\"\n                              classNamePrefix=\"react-select\"\n                              name=\"pull_type\"\n                              value={this.state.pullType}\n                              onChange={value =>\n                                this.setState({ pullType: value }, function() { this.renderChart() })\n                              }\n                              options={[\n                                { value: \"hour\", label: \"Hourly\" },\n                                { value: \"day\", label: \"Daily\" },\n                                { value: \"week\", label: \"Weekly\" },\n                                { value: \"month\", label: \"Monthly\" },\n                                { value: \"weekday\", label: \"Weekdays\" },\n                              ]}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\" md=\"6\" sm=\"6\">\n                          <Row>\n                            <Label sm=\"3\">From</Label>\n                            <Col sm=\"9\">\n                              <FormGroup>\n                                <ReactDatetime\n                                  inputProps={{\n                                    className: \"form-control\",\n                                    placeholder: \"From Date\"\n                                  }}\n                                  name=\"from_date\"\n                                  dateFormat=\"YYYY-MM-DD\"\n                                  timeFormat={false}\n                                  value={this.state.fromDate}\n                                  onChange={value =>\n                                    this.setState({ fromDate: value }, function() { this.renderChart() })\n                                  } \n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                        </Col>\n                        <Col lg=\"4\" md=\"6\" sm=\"6\">\n                          <Row>\n                            <Label sm=\"3\">To</Label>\n                            <Col sm=\"9\">\n                              <FormGroup>\n                                <ReactDatetime\n                                  inputProps={{\n                                    className: \"form-control\",\n                                    placeholder: \"To Date\"\n                                  }}\n                                  name=\"to_date\"\n                                  dateFormat=\"YYYY-MM-DD\"\n                                  timeFormat={false}\n                                  value={this.state.toDate}\n                                  onChange={value =>\n                                    this.setState({ toDate: value.format('YYYY-MM-DD') }, function() { this.renderChart() })\n                                  } \n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Line\n                      data={this.state.chart}\n                      options={this.state.chartOptions}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeColor: \"blue\",\n      sidebarMini: true,\n      opacity: 0,\n      sidebarOpened: false\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.classList.add(\"perfect-scrollbar-on\");\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      this.refs.mainPanel.addEventListener(\n        \"ps-scroll-y\",\n        this.showNavbarButton\n      );\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    window.addEventListener(\"scroll\", this.showNavbarButton);\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className.add(\"perfect-scrollbar-off\");\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      this.refs.mainPanel.removeEventListener(\n        \"ps-scroll-y\",\n        this.showNavbarButton\n      );\n    }\n    window.removeEventListener(\"scroll\", this.showNavbarButton);\n  }\n  componentDidUpdate(e) {\n    if (e.location.pathname !== e.history.location.pathname) {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  showNavbarButton = () => {\n    if (\n      document.documentElement.scrollTop > 50 ||\n      document.scrollingElement.scrollTop > 50 ||\n      this.refs.mainPanel.scrollTop > 50\n    ) {\n      this.setState({ opacity: 1 });\n    } else if (\n      document.documentElement.scrollTop <= 50 ||\n      document.scrollingElement.scrollTop <= 50 ||\n      this.refs.mainPanel.scrollTop <= 50\n    ) {\n      this.setState({ opacity: 0 });\n    }\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return this.getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getActiveRoute = routes => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = this.getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (\n          window.location.pathname.indexOf(\n            routes[i].layout + routes[i].path\n          ) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  handleActiveClick = color => {\n    this.setState({ activeColor: color });\n  };\n  handleMiniClick = () => {\n    let notifyMessage = \"Sidebar mini \";\n    if (document.body.classList.contains(\"sidebar-mini\")) {\n      this.setState({ sidebarMini: false });\n      notifyMessage += \"deactivated...\";\n    } else {\n      this.setState({ sidebarMini: true });\n      notifyMessage += \"activated...\";\n    }\n    let options = {};\n    options = {\n      place: \"tr\",\n      message: notifyMessage,\n      type: \"primary\",\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: 7\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n    document.body.classList.toggle(\"sidebar-mini\");\n  };\n  toggleSidebar = () => {\n    this.setState({\n      sidebarOpened: !this.state.sidebarOpened\n    });\n    document.documentElement.classList.toggle(\"nav-open\");\n  };\n  closeSidebar = () => {\n    this.setState({\n      sidebarOpened: false\n    });\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"rna-container\">\n          <NotificationAlert ref=\"notificationAlert\" />\n        </div>\n        <div\n          className=\"navbar-minimize-fixed\"\n          style={{ opacity: this.state.opacity }}\n        >\n          <button\n            className=\"minimize-sidebar btn btn-link btn-just-icon\"\n            onClick={this.handleMiniClick}\n          >\n            <i className=\"tim-icons icon-align-center visible-on-sidebar-regular text-muted\" />\n            <i className=\"tim-icons icon-bullet-list-67 visible-on-sidebar-mini text-muted\" />\n          </button>\n        </div>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          activeColor={this.state.activeColor}\n          logo={{\n            outterLink: \"https://www.creative-tim.com/\",\n            text: \"Creative Tim\",\n            imgSrc: logo\n          }}\n          closeSidebar={this.closeSidebar}\n        />\n        <div\n          className=\"main-panel\"\n          ref=\"mainPanel\"\n          data={this.state.activeColor}\n        >\n          <AdminNavbar\n            {...this.props}\n            handleMiniClick={this.handleMiniClick}\n            brandText={this.getActiveRoute(routes)}\n            sidebarOpened={this.state.sidebarOpened}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/dashboard\" />\n          </Switch>\n          {// we don't want the Footer to be rendered on full screen maps page\n          this.props.location.pathname.indexOf(\"full-screen-map\") !==\n          -1 ? null : (\n            <Footer fluid />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import Dashboard from \"views/Dashboard.js\";\n\nconst routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\"\n  },\n];\n\nexport default routes;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\n\nimport \"assets/css/nucleo-icons.css\";\nimport \"react-notification-alert/dist/animate.css\";\nimport \"assets/scss/client.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}